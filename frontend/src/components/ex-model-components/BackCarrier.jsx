// import React, { useMemo } from 'react';
// import { useGLTF } from '@react-three/drei';

// export default function BackCarrier({ isSelected, ...props }) {
//   const { nodes, materials } = useGLTF('./models/ex-parts144/BackCarrier.glb');

//   const highlightedMaterialLambert2 = useMemo(() => {
//     const material = materials.lambert2.clone();
//     // // material.emissive.set('blue');
//     material.emissiveIntensity = 1;
//     return material;
//   }, [materials.lambert2]);

//   const highlightedMaterialLock002 = useMemo(() => {
//     const material = materials['lock.002'].clone();
//     // // material.emissive.set('blue');
//     material.emissiveIntensity = 1;
//     return material;
//   }, [materials['lock.002']]);

//   const highlightedMaterialChrome003 = useMemo(() => {
//     const material = materials['chrome.003'].clone();
//     // // material.emissive.set('blue');
//     material.emissiveIntensity = 1;
//     return material;
//   }, [materials['chrome.003']]);

//   return (
//     <group {...props} dispose={null}>
//       <group position={[-0.013, 1.411, -2.957]}>
//         <mesh
//           castShadow
//           receiveShadow
//           geometry={nodes.Mesh001.geometry}
//           material={isSelected ? highlightedMaterialLambert2 : materials.lambert2}
//         />
//         <mesh
//           castShadow
//           receiveShadow
//           geometry={nodes.Mesh001_1.geometry}
//           material={isSelected ? highlightedMaterialLock002 : materials['lock.002']}
//         />
//         <mesh
//           castShadow
//           receiveShadow
//           geometry={nodes.Mesh001_2.geometry}
//           material={isSelected ? highlightedMaterialChrome003 : materials['chrome.003']}
//         />
//       </group>
//     </group>
//   );
// }

// useGLTF.preload('./models/ex-parts144/BackCarrier.glb');

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export default function BackCarrier(props) {
  const { nodes, materials } = useGLTF('./models/ex-parts144/back-carrier.glb')
  return (
    <group {...props} dispose={null}>
      <group position={[-0.013, 1.411, -2.957]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh001.geometry}
          material={materials.lambert2}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_1.geometry}
          material={materials['lock.002']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh001_2.geometry}
          material={materials['chrome.003']}
        />
      </group>
    </group>
  )
}

useGLTF.preload('./models/ex-parts144/back-carrier.glb')