// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// */

// import React, { useMemo } from 'react'
// import { useGLTF } from '@react-three/drei'

// export default function CounterTopExtensionOne({ isActive, ...props }) {
//   const { nodes, materials } = useGLTF('./models/parts144/countertop-extension-one.glb')

//   const whiteMarbleMat = useMemo(() => {
//     const mat = materials.white_marble.clone()
//     if (isActive) // material.emissive.set('blue');
//     return mat
//   }, [isActive, materials])

//   const blackMat = useMemo(() => {
//     const mat = materials.Black.clone()
//     if (isActive) // material.emissive.set('blue');
//     return mat
//   }, [isActive, materials])

//   return (
//     <group {...props} dispose={null}>
//       <group position={[-0.582, 1.491, 0.077]}>
//         <mesh
//           castShadow
//           receiveShadow
//           geometry={nodes.Cube023.geometry}
//           material={whiteMarbleMat}
//         />
//         <mesh
//           castShadow
//           receiveShadow
//           geometry={nodes.Cube023_1.geometry}
//           material={blackMat}
//         />
//       </group>
//     </group>
//   )
// }

// useGLTF.preload('./models/parts144/countertop-extension-one.glb')

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export default function CounterTopExtensionOne(props) {
  const { nodes, materials } = useGLTF('./models/in-parts144/countertop-extension-one.glb')
  return (
    <group {...props} dispose={null}>
      <group position={[-0.582, 1.491, 0.077]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube023.geometry}
          material={materials.white_marble}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube023_1.geometry}
          material={materials.Black}
        />
      </group>
    </group>
  )
}

useGLTF.preload('./models/in-parts144/countertop-extension-one.glb')
