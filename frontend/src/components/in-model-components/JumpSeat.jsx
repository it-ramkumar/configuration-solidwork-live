// import React, { useMemo } from 'react';
// import { useGLTF } from '@react-three/drei';

// const JumpSeat = React.forwardRef(({ isSelected,isVisible, ...props }, ref) => {
//   const { nodes, materials } = useGLTF('./models/parts144/JumpSeat.glb');

//   const highlightedMaterial = useMemo(() => {
//     const material = materials['Material.021'].clone();

//     material.emissiveIntensity = 1;
//     return material;
//   }, [materials['Material.021']]);

//   return (
//     <group ref={ref} {...props} dispose={null} visible={isVisible}>
//       <mesh
//         castShadow
//         receiveShadow
//         geometry={nodes.Cube019.geometry}
//         material={isSelected ? highlightedMaterial : materials['Material.021']}
//         position={[-0.002, 1.077, 1.054]}
//       />
//     </group>
//   );
// });

// useGLTF.preload('./models/parts144/JumpSeat.glb');

// export default JumpSeat;

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export default function JumpSeat(props) {
  const { nodes, materials } = useGLTF('./models/in-parts144/jump-seat.glb')
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube019.geometry}
        material={materials['Material.021']}
        position={[-0.002, 1.077, 1.054]}
      />
    </group>
  )
}

useGLTF.preload('./models/in-parts144/jump-seat.glb')