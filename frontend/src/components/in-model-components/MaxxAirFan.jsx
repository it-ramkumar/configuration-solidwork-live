// // import React, { useMemo } from 'react';
// // import { useGLTF } from '@react-three/drei';

// // export default function MaxxAirFan({ isSelected, ...props }) {
// //   const { nodes, materials } = useGLTF('./models/parts144/maxxairfan.glb');

// //   // Create highlighted materials for each unique material
// //   const highlightedMaterial001 = useMemo(() => {
// //     const material = materials['Material.001'].clone();
// //
// //     material.emissiveIntensity = 1;
// //     return material;
// //   }, [materials['Material.001']]);

// //   const highlightedMaterial009 = useMemo(() => {
// //     const material = materials['Material.009'].clone();
// //
// //     material.emissiveIntensity = 1;
// //     return material;
// //   }, [materials['Material.009']]);

// //   const highlightedMaterialWhite = useMemo(() => {
// //     const material = materials.white.clone();
// //
// //     material.emissiveIntensity = 1;
// //     return material;
// //   }, [materials.white]);

// //   const highlightedMaterialBlackRubber = useMemo(() => {
// //     const material = materials.black_rubber.clone();
// //
// //     material.emissiveIntensity = 1;
// //     return material;
// //   }, [materials.black_rubber]);

// //   const highlightedMaterialMetalMesh = useMemo(() => {
// //     const material = materials['Metal_Mesh_Grid.001'].clone();
// //
// //     material.emissiveIntensity = 1;
// //     return material;
// //   }, [materials['Metal_Mesh_Grid.001']]);

// //   const highlightedMaterial002 = useMemo(() => {
// //     const material = materials['Material.002'].clone();
// //
// //     material.emissiveIntensity = 1;
// //     return material;
// //   }, [materials['Material.002']]);

// //   const highlightedMaterial008 = useMemo(() => {
// //     const material = materials['Material.008'].clone();
// //
// //     material.emissiveIntensity = 1;
// //     return material;
// //   }, [materials['Material.008']]);

// //   const highlightedMaterial005 = useMemo(() => {
// //     const material = materials['Material.005'].clone();
// //
// //     material.emissiveIntensity = 1;
// //     return material;
// //   }, [materials['Material.005']]);

// //   const highlightedMaterial006 = useMemo(() => {
// //     const material = materials['Material.006'].clone();
// //
// //     material.emissiveIntensity = 1;
// //     return material;
// //   }, [materials['Material.006']]);

// //   return (
// //     <group {...props} dispose={null}>
// //       <group position={[-0.041, -0.005, 0.606]}>
// //         <mesh
// //           castShadow
// //           receiveShadow
// //           geometry={nodes.Cube049.geometry}
// //           material={isSelected ? highlightedMaterial001 : materials['Material.001']}
// //         />
// //         <mesh
// //           castShadow
// //           receiveShadow
// //           geometry={nodes.Cube049_1.geometry}
// //           material={isSelected ? highlightedMaterial009 : materials['Material.009']}
// //         />
// //         <mesh
// //           castShadow
// //           receiveShadow
// //           geometry={nodes.Cube049_2.geometry}
// //           material={isSelected ? highlightedMaterialWhite : materials.white}
// //         />
// //         <mesh
// //           castShadow
// //           receiveShadow
// //           geometry={nodes.Cube049_3.geometry}
// //           material={isSelected ? highlightedMaterialBlackRubber : materials.black_rubber}
// //         />
// //         <mesh
// //           castShadow
// //           receiveShadow
// //           geometry={nodes.Cube049_4.geometry}
// //           material={isSelected ? highlightedMaterialMetalMesh : materials['Metal_Mesh_Grid.001']}
// //         />
// //         <mesh
// //           castShadow
// //           receiveShadow
// //           geometry={nodes.Cube049_5.geometry}
// //           material={isSelected ? highlightedMaterial002 : materials['Material.002']}
// //         />
// //         <mesh
// //           castShadow
// //           receiveShadow
// //           geometry={nodes.Cube049_6.geometry}
// //           material={isSelected ? highlightedMaterial008 : materials['Material.008']}
// //         />
// //         <mesh
// //           castShadow
// //           receiveShadow
// //           geometry={nodes.Cube049_7.geometry}
// //           material={isSelected ? highlightedMaterial005 : materials['Material.005']}
// //         />
// //         <mesh
// //           castShadow
// //           receiveShadow
// //           geometry={nodes.Cube049_8.geometry}
// //           material={isSelected ? highlightedMaterial006 : materials['Material.006']}
// //         />
// //       </group>
// //     </group>
// //   );
// // }

// // useGLTF.preload('./models/parts144/maxxairfan.glb');


// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// */
// import React, { useMemo } from 'react';
// import { useGLTF } from '@react-three/drei';

// export default function MaxxAirFan({ isSelected, ...props }) {
//   const { nodes, materials } = useGLTF('./models/parts144/maxx-air-fan.glb');

//   // Highlighted materials for each unique material
//   const highlightedMaterial001 = useMemo(() => {
//     const material = materials['Material.001'].clone();

//     material.emissiveIntensity = 1;
//     return material;
//   }, [materials['Material.001']]);

//   const highlightedMaterial002 = useMemo(() => {
//     const material = materials['Material.002'].clone();

//     material.emissiveIntensity = 1;
//     return material;
//   }, [materials['Material.002']]);

//   const highlightedMaterialWhite = useMemo(() => {
//     const material = materials.white.clone();

//     material.emissiveIntensity = 1;
//     return material;
//   }, [materials.white]);

//   const highlightedMaterialBlackRubber = useMemo(() => {
//     const material = materials.black_rubber.clone();

//     material.emissiveIntensity = 1;
//     return material;
//   }, [materials.black_rubber]);

//   const highlightedMaterialMetalMesh = useMemo(() => {
//     const material = materials['Metal_Mesh_Grid.001'].clone();

//     material.emissiveIntensity = 1;
//     return material;
//   }, [materials['Metal_Mesh_Grid.001']]);

//   const highlightedMaterial003 = useMemo(() => {
//     const material = materials['Material.003'].clone();

//     material.emissiveIntensity = 1;
//     return material;
//   }, [materials['Material.003']]);

//   const highlightedMaterial008 = useMemo(() => {
//     const material = materials['Material.008'].clone();

//     material.emissiveIntensity = 1;
//     return material;
//   }, [materials['Material.008']]);

//   const highlightedMaterial005 = useMemo(() => {
//     const material = materials['Material.005'].clone();

//     material.emissiveIntensity = 1;
//     return material;
//   }, [materials['Material.005']]);

//   const highlightedMaterial006 = useMemo(() => {
//     const material = materials['Material.006'].clone();

//     material.emissiveIntensity = 1;
//     return material;
//   }, [materials['Material.006']]);

//   return (
//     <group {...props} dispose={null}>
//       <group position={[-0.026, 2.578, 0.292]}>
//         {nodes?.Cube049?.geometry && (
//           <mesh
//             castShadow
//             receiveShadow
//             geometry={nodes.Cube049.geometry}
//             material={isSelected ? highlightedMaterial001 : materials['Material.001']}
//           />
//         )}
//         {nodes?.Cube049_1?.geometry && (
//           <mesh
//             castShadow
//             receiveShadow
//             geometry={nodes.Cube049_1.geometry}
//             material={isSelected ? highlightedMaterial002 : materials['Material.002']}
//           />
//         )}
//         {nodes?.Cube049_2?.geometry && (
//           <mesh
//             castShadow
//             receiveShadow
//             geometry={nodes.Cube049_2.geometry}
//             material={isSelected ? highlightedMaterialWhite : materials.white}
//           />
//         )}
//         {nodes?.Cube049_3?.geometry && (
//           <mesh
//             castShadow
//             receiveShadow
//             geometry={nodes.Cube049_3.geometry}
//             material={isSelected ? highlightedMaterialBlackRubber : materials.black_rubber}
//           />
//         )}
//         {nodes?.Cube049_4?.geometry && (
//           <mesh
//             castShadow
//             receiveShadow
//             geometry={nodes.Cube049_4.geometry}
//             material={isSelected ? highlightedMaterialMetalMesh : materials['Metal_Mesh_Grid.001']}
//           />
//         )}
//         {nodes?.Cube049_5?.geometry && (
//           <mesh
//             castShadow
//             receiveShadow
//             geometry={nodes.Cube049_5.geometry}
//             material={isSelected ? highlightedMaterial003 : materials['Material.003']}
//           />
//         )}
//         {nodes?.Cube049_6?.geometry && (
//           <mesh
//             castShadow
//             receiveShadow
//             geometry={nodes.Cube049_6.geometry}
//             material={isSelected ? highlightedMaterial008 : materials['Material.008']}
//           />
//         )}
//         {nodes?.Cube049_7?.geometry && (
//           <mesh
//             castShadow
//             receiveShadow
//             geometry={nodes.Cube049_7.geometry}
//             material={isSelected ? highlightedMaterial005 : materials['Material.005']}
//           />
//         )}
//         {nodes?.Cube049_8?.geometry && (
//           <mesh
//             castShadow
//             receiveShadow
//             geometry={nodes.Cube049_8.geometry}
//             material={isSelected ? highlightedMaterial006 : materials['Material.006']}
//           />
//         )}
//       </group>
//     </group>
//   );
// }

// useGLTF.preload('./models/parts144/maxx-air-fan.glb');


/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export default function MaxxAirFan(props) {
  const { nodes, materials } = useGLTF('./models/in-parts144/maxx-air-fan.glb')
  return (
    <group {...props} dispose={null}>
      <group position={[-0.026, 2.578, 0.292]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube049.geometry}
          material={materials['Material.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube049_1.geometry}
          material={materials['Material.002']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube049_2.geometry}
          material={materials.white}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube049_3.geometry}
          material={materials.black_rubber}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube049_4.geometry}
          material={materials['Metal_Mesh_Grid.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube049_5.geometry}
          material={materials['Material.003']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube049_6.geometry}
          material={materials['Material.008']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube049_7.geometry}
          material={materials['Material.005']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube049_8.geometry}
          material={materials['Material.006']}
        />
      </group>
    </group>
  )
}

useGLTF.preload('./models/in-parts144/maxx-air-fan.glb')