// import React, { useMemo } from 'react';
// import { useGLTF } from '@react-three/drei';

// export function StoveLarge({ isSelected, ...props }) {
//     const { nodes, materials } = useGLTF('./models/parts144/stove_Large.glb');

//     // Highlighted material for the BigPlateMat
//     const highlightedMaterial = useMemo(() => {
//       const material = materials.BigPlateMat.clone();

//       material.emissiveIntensity = 1;
//       return material;
//     }, [materials.BigPlateMat]);

//     return (
//       <group {...props} dispose={null}>
//         {nodes?.Plane014?.geometry && (
//           <mesh
//             castShadow
//             receiveShadow
//             geometry={nodes.Plane014.geometry}
//             material={isSelected ? highlightedMaterial : materials.BigPlateMat}
//             position={[-0.579, 1.517, -0.874]}
//             rotation={[-Math.PI, 1.57, -Math.PI]}
//           />
//         )}
//       </group>
//     );
//   }

//   // useGLTF.preload('./models/parts144/stove_Large.glb');

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function StoveLarge(props) {
  const { nodes, materials } = useGLTF('./models/in-parts144/stove_Large.glb')
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane014.geometry}
        material={materials.BigPlateMat}
        position={[-0.579, 1.517, -0.874]}
        rotation={[-Math.PI, 1.57, -Math.PI]}
      />
    </group>
  )
}

useGLTF.preload('./models/in-parts144/stove_Large.glb')