 Git & GitHub Setup and Usage Guide for MERN Van Configurator Project  

 üìö Overview  
This guide explains how to:  
- Set up Git and GitHub for the MERN Van Configurator project.  
- Use Git for version control, collaboration, and deployment.  



 ‚öñÔ∏è Benefits of Using Git and GitHub  

 Version Control  
- Git: Tracks changes locally.  
- GitHub: Stores a remote repository with full history.  

 Collaboration  
- Git: Supports branching and merging.  
- GitHub: Enables pull requests and code reviews.  

 Backup & Security  
- Git: Local commits.  
- GitHub: Cloud storage with access control.  

 CI/CD & Automation  
- GitHub: Supports GitHub Actions for automated workflows.  

 Issue Management  
- GitHub: Provides GitHub Issues and Projects for tracking tasks.  

 Deployment  
- GitHub: Integrates with AWS Amplify, Heroku, Netlify, etc.  



 ‚ö° Prerequisites  
- Install Node.js and npm.  
- Install Git (check with `git --version`).  
- Create a GitHub account.  



 üöÄ Git Setup  

 1. Initialize a Git Repository  
```bash  
git init  
```  

 2. Add Files and Commit  
```bash  
git add .  
git commit -m "Initial commit"  
```  

 3. Create a `.gitignore` File  
```bash  
echo "node_modules/\nbuild/\n.env" > .gitignore  
```  

 4. Set Global Git Config  
```bash  
git config --global user.name "Your Name"  
git config --global user.email "you@example.com"  
```  



 üìö GitHub Usage  

 1. Create a GitHub Repository  
- Choose private or public.  

 2. Connect Local Project to GitHub  
```bash  
git remote add origin https://github.com/username/repo-name.git  
git branch -M main  
git push -u origin main  
```  

 3. Clone a Repository  
```bash  
git clone https://github.com/username/repo-name.git  
```  

 4. Create a Feature Branch  
```bash  
git checkout -b feature/add-login  
```  

 5. Merge Changes  
```bash  
git checkout main  
git merge feature/add-login  
```  



 üéì Best Practices  
- Commit messages: Be descriptive.  
- Push frequently: Avoid large, unmanageable changes.  
- Use pull requests: For team collaboration.  
- Resolve conflicts: Through code reviews.  



 üíº Usefulness for Van Configurator  

 Track Code Changes  
- Every version is recorded and restorable.  

 Team Collaboration  
- Branching and pull requests streamline teamwork.  

 Deployment  
- GitHub integrates with AWS Amplify (frontend) and EC2 (backend).  

 Bug Tracking  
- Use GitHub Issues to log and manage bugs.  

 Automation  
- GitHub Actions for CI/CD pipelines.  



 ‚ö†Ô∏è Fixing Accidental Git Repo in Client Folder  
1. Navigate to the `client` directory:  
   ```bash  
   cd client  
   ```  
2. Remove the `.git` folder:  
   ```bash  
   rm -rf .git  
   ```  
